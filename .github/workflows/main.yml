name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거
#build작업하는데 ubuntu-latest서버에서 준비하라
jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
    # 코드 체크아웃
    - name: Checkout repository #display 이름
      uses: actions/checkout@v2 #실제 동작하는 부분 (깃액션의 플러그인 : main브런치 소스코드 클론)

    # JDK 17 설정(설치)
    - name: Set up JDK 17
      uses: actions/setup-java@v1 #플러그인 이름 with:옵션
      with:
        java-version: '17'
    # '|'여러줄 입력  run: 뒤에는 리눅스 명령을 작성한다.
    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build
  #개인키 만들기(git에서 만든 개발서버저장소에..)
    - name: Set SSH key permissions
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    - name: Add known_hosts
      run: |
        ssh-keyscan -t ed25519 3.34.135.91 >> ~/.ssh/known_hosts

    #- name: 기존프로세스 종료 
    #  run: |
    #    kill -9 $(ps -ef | grep devops | grep -v grep | head -n 1 | awk '{print $2}') || true

    - name: Deploy to Server
      run: scp build/libs/*.jar ubuntu@3.34.135.91:~/


    - name: Run SSH commands
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@3.34.135.91 << 'EOF'
          pkill -f 'java -jar' || true
          nohup java -jar ~/devopt_step0-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
        EOF
